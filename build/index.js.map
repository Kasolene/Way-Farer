{"version":3,"sources":["../server/index.js"],"names":["app","port","config","use","bodyParser","urlencoded","extended","json","userRoute","tripRoute","bookingRoute","get","req","res","status","message","err","next","error","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;IAEQC,I,GAASC,kB,CAATD,I;AAERD,GAAG,CAACG,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAH,GAAG,CAACG,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAN,GAAG,CAACG,GAAJ,CAAQC,uBAAWG,IAAX,EAAR,E,CAGA;;AACAP,GAAG,CAACG,GAAJ,CAAQ,cAAR,EAAwBK,qBAAxB;AACAR,GAAG,CAACG,GAAJ,CAAQ,SAAR,EAAmBM,qBAAnB;AACAT,GAAG,CAACG,GAAJ,CAAQ,SAAR,EAAmBO,wBAAnB,E,CAGA;;AACAV,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CACE;AACEO,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,OAAO,EAAE;AAFX,GADF;AAMD,CAPD,E,CAUA;;AACAf,GAAG,CAACG,GAAJ,CAAQ,UAACa,GAAD,EAAMJ,GAAN,EAAWC,GAAX,EAAgBI,IAAhB,EAAyB;AAC/B,MAAID,GAAJ,EAAS;AACP,WAAOH,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AAC1BO,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,GAAG,EAAE;AAFqB,KAArB,CAAP;AAID;;AAACC,EAAAA,IAAI;AACP,CAPD,E,CAQA;;AACAjB,GAAG,CAACG,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAc;AACpBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AACnBO,IAAAA,MAAM,EAAE,GADW;AAEnBI,IAAAA,KAAK,EAAE;AAFY,GAArB;AAID,CALD;AAQAlB,GAAG,CAACmB,MAAJ,CAAWlB,IAAX,EAAiB,YAAM;AACrB;AACAmB,EAAAA,OAAO,CAACC,GAAR,6CAAiDpB,IAAjD;AACD,CAHD;eAKeD,G","sourcesContent":["import express from 'express';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport config from './config/config';\r\nimport userRoute from './routes/userRoute';\r\nimport tripRoute from './routes/tripRoute';\r\nimport bookingRoute from './routes/bookingRoute';\r\n\r\nconst app = express();\r\n\r\nconst { port } = config;\r\n\r\napp.use(morgan('dev'));\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\n\r\n// API Routes\r\napp.use('/api/v1/auth', userRoute);\r\napp.use('/api/v1', tripRoute);\r\napp.use('/api/v1', bookingRoute);\r\n\r\n\r\n// Home page route\r\napp.get('/', (req, res) => {\r\n  res.status(200).json(\r\n    {\r\n      status: 200,\r\n      message: 'Welcome to default WayFare API Home Route',\r\n    },\r\n  );\r\n});\r\n\r\n\r\n// handle all error\r\napp.use((err, req, res, next) => {\r\n  if (err) {\r\n    return res.status(500).json({\r\n      status: 500,\r\n      err: 'Internal server error',\r\n    });\r\n  } next();\r\n});\r\n// Handle non exist route with with proper message\r\napp.use((req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Wrong request. Route does not exist',\r\n  });\r\n});\r\n\r\n\r\napp.listen(port, () => {\r\n  // eslint-disable-next-line no-console\r\n  console.log(`Server now listening at localhost:${port}`);\r\n});\r\n\r\nexport default app;\r\n"],"file":"index.js"}