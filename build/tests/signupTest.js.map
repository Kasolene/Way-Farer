{"version":3,"sources":["../../server/tests/signupTest.js"],"names":["should","chai","use","chaiHttp","signupDetails","email","firstName","lastName","password","signupDetailsUndefinned","signupDetailsInvalidMail","signupDetailsInvalidPassword","signupDetailsTrue","describe","it","done","request","app","post","send","end","err","res","have","status","expect","body","data","equal"],"mappings":"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","sourcesContent":["import assert from 'assert';\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport { expect } from 'chai';\r\nimport  app from '../index';\r\nimport users from '../models/Users';\r\n\r\nconst should = chai.should();\r\nchai.use(chaiHttp);\r\n\r\nconst signupDetails = {\r\n  email: 'nicolas@gmail.com',\r\n  firstName: 'nicolas',\r\n  lastName: 'kasolene',\r\n  password:'nicolas123',\r\n};\r\n\r\nconst signupDetailsUndefinned = {\r\n  email: 'nicolas@gmail.com',\r\n  firstName: 'nicolas',\r\n  password:'nicolas123',\r\n};\r\n\r\nconst signupDetailsInvalidMail = {\r\n  email: 'nicolas-gmail.com',\r\n  password:'nicolas123',\r\n};\r\n\r\nconst signupDetailsInvalidPassword = {\r\n  email: 'nicolas@gmail.com',\r\n  password:'nico',\r\n};\r\n\r\nconst signupDetailsTrue = {\r\n  email: 'nicolaskasolene@gmail.com',\r\n  firstName: 'nicolas',\r\n  lastName: 'kasolene',\r\n  password:'nicolas123',\r\n};\r\n\r\ndescribe('signup', () => {\r\n  it('it should not create an account with undefinned values', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetailsUndefinned)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should not create an account if the email is already taken', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetails)\r\n      .end((err, res) => {\r\n        res.should.have.status(409);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should return a 200 status and user data when everything is okey', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetailsTrue)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        chai.expect(res.body.data.email).equal('nicolaskasolene@gmail.com');\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\n  it('should not create account with invalid mail', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetailsInvalidMail)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should not create account with a password having less than 6 characters', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetailsInvalidPassword)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should not create account with undefinned parameters', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .send(signupDetailsUndefinned)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n}); \r\n"],"file":"signupTest.js"}